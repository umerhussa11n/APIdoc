const apiPath = 'https://www.getpostman.com/collections/49f2aa67fa4d8ea7e70d';
const descriptions = {
  querycardorderslist: {
    success: true,
    data: {
      id: 'The id of the card order object',
      entity_id: 'The id of the entity that the card order was created to ',
      card_id: 'The id of the card id that the card order was issued against',
      card_upgrade_id: 'The id of the card upgrade id',
      reference: 'A reference from the network referencing the card order',
      type: 'One of issue, upgrade',
      status: 'One of processing, processed, reissue, verified, failed',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
    },
    links: {
      first: 'The first page for card orderlist',
      last: 'The last page for card oderlist',
      prev: 'The previous page of current card orderlist',
      next: 'The next page of current card orderlist',
    },
    meta: {
      current_page: 'The page number of current card orderlist',
      from: 'The first number of card orderlist',
      last_page: 'The last number of card orderlist',
      path: 'The path for the card orderlists',
      per_page: 'The number of card orderlist per page',
      to: 'The number limist of card orderlist per page',
      total: 'Total number of card orders',
    },
  },
  querycardorderbyid: {
    success: true,
    data: {
      id: 'The id of the card order object',
      entity_id: 'The id of the entity that the card order was created to ',
      card_id: 'The id of the card id that the card order was issued against',
      card_upgrade_id: 'The id of the card upgrade id',
      reference: 'A reference from the network referencing the card order',
      type: 'One of issue, upgrade',
      status: 'One of processing, processed, reissue, verified, failed',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
      entity_card: {
        id: 'The id of entity card',
        card_order_id: 'The id of card order',
        entity_id: 'The id of entity',
        card_id: 'The id of the card id that the card order was issued against',
        from_entity_card_id:
          'The id of the card id that the card order was issued against',
        reference: 'A reference from the network referencing the card order',
        number: 'card number',
        cvv: 'cvv',
        expiry_date: 'expired date of card',
        balance: 'card balance',
        daily_purchase_total: 'purchase total amount per day',
        daily_atm_total: 'atm total amount per day',
        monthly_purchase_total: 'purchase total amount per month',
        monthly_atm_total: 'atm total amount per month',
        physical: 'The physical status of the card',
        virtual: 'The virutal status of the card',
        gift: 'The gitft status of the card',
        locked: 'The locked status of the card',
        activated: 'The activated status of the card',
        pin_set: 'The Pin set status of the card',
        status: 'One of processing, processed, reissue, verified, failed',
        freeze: 'The freeze status of the card',
        created_at: 'The date that the record was created',
        updated_at: 'The date that the record was updated',
        deleted_at: 'The date that the record was deleted',
      },
    },
  },
  updatecardorder: {
    success: true,
    data: {
      id: 'The id of the card order object',
      entity_id: 'The id of the entity that the card order was created to ',
      card_id: 'The id of the card id that the card order was issued against',
      card_upgrade_id: 'The id of the card upgrade id',
      reference: 'A reference from the network referencing the card order',
      type: 'One of issue, upgrade',
      status: 'One of processing, processed, reissue, verified, failed',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
      entity_card: {
        id: 'The id of entity card',
        card_order_id: 'The id of card order',
        entity_id: 'The id of entity',
        card_id: 'The id of the card id that the card order was issued against',
        from_entity_card_id:
          'The id of the card id that the card order was issued against',
        reference: 'A reference from the network referencing the card order',
        number: 'card number',
        cvv: 'cvv',
        expiry_date: 'expired date of card',
        balance: 'card balance',
        daily_purchase_total: 'purchase total amount per day',
        daily_atm_total: 'atm total amount per day',
        monthly_purchase_total: 'purchase total amount per month',
        monthly_atm_total: 'atm total amount per month',
        physical: 'The physical status of the card',
        virtual: 'The virutal status of the card',
        gift: 'The gitft status of the card',
        locked: 'The locked status of the card',
        activated: 'The activated status of the card',
        pin_set: 'The Pin set status of the card',
        status: 'One of processing, processed, reissue, verified, failed',
        freeze: 'The freeze status of the card',
        created_at: 'The date that the record was created',
        updated_at: 'The date that the record was updated',
        deleted_at: 'The date that the record was deleted',
      },
    },
  },
  createcardorders: {
    success: true,
    data: {
      id: 'The id of the card order object',
      entity_id: 'The id of the entity that the card order was created to ',
      card_id: 'The id of the card id that the card order was issued against',
      card_upgrade_id: 'The id of the card upgrade id',
      reference: 'A reference from the network referencing the card order',
      type: 'One of issue, upgrade',
      status: 'One of processing, processed, reissue, verified, failed',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
      entity_card: {
        id: 'The id of entity card',
        card_order_id: 'The id of card order',
        entity_id: 'The id of entity',
        card_id: 'The id of the card id that the card order was issued against',
        from_entity_card_id:
          'The id of the card id that the card order was issued against',
        reference: 'A reference from the network referencing the card order',
        number: 'card number',
        cvv: 'cvv',
        expiry_date: 'expired date of card',
        balance: 'card balance',
        daily_purchase_total: 'purchase total amount per day',
        daily_atm_total: 'atm total amount per day',
        monthly_purchase_total: 'purchase total amount per month',
        monthly_atm_total: 'atm total amount per month',
        physical: 'The physical status of the card',
        virtual: 'The virutal status of the card',
        gift: 'The gitft status of the card',
        locked: 'The locked status of the card',
        activated: 'The activated status of the card',
        pin_set: 'The Pin set status of the card',
        status: 'One of processing, processed, reissue, verified, failed',
        freeze: 'The freeze status of the card',
        created_at: 'The date that the record was created',
        updated_at: 'The date that the record was updated',
        deleted_at: 'The date that the record was deleted',
      },
    },
  },
  querycardtransactionlist: {
    data: {
      id: 'The id of the card order object',
      from_card_transaction_id:
        'The id of the card transaction id that the card transaction was issued against',
      entity_card_id:
        'The id of the entity that the card order was created to ',
      transaction_id: 'The id of the card transaction id',
      merchant: 'NINTENDO    *OFAMERICA',
      reference: 'A reference from the network referencing the card order',
      authorization: 'The id of card authorization ',
      type: 'The type of card transaction',
      status: 'The status of card transaction',
      currency: 'Currency',
      channel: 'The channel of the card transaction',
      pin_present: 'The present of the card transaction',
      approved: 'The approved mount',
      total: 'The total amount',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
    },
    links: {
      first: 'The first page for card orderlist',
      last: 'The last page for card oderlist',
      prev: 'The previous page of current card orderlist',
      next: 'The next page of current card orderlist',
    },
    meta: {
      current_page: 'The page number of current card orderlist',
      from: 'The first number of card orderlist',
      last_page: 'The last number of card orderlist',
      path: 'The path for the card orderlists',
      per_page: 'The number of card orderlist per page',
      to: 'The number limist of card orderlist per page',
      total: 'Total card orders',
    },
  },
  queryentitycardslist: {
    success: true,
    data: {
      id: 'The id of entity card',
      card_order_id: 'The id of card order',
      entity_id: 'The id of entity',
      card_id: 'The id of the card id that the card order was issued against',
      from_entity_card_id:
        'The id of the card id that the card order was issued against',
      reference: 'A reference from the network referencing the card order',
      number: 'card number',
      cvv: 'cvv',
      expiry_date: 'expired date of card',
      balance: 'card balance',
      daily_purchase_total: 'purchase total amount per day',
      daily_atm_total: 'atm total amount per day',
      monthly_purchase_total: 'purchase total amount per month',
      monthly_atm_total: 'atm total amount per month',
      physical: 'The physical status of the card',
      virtual: 'The virutal status of the card',
      gift: 'The gitft status of the card',
      locked: 'The locked status of the card',
      activated: 'The activated status of the card',
      pin_set: 'The Pin set status of the card',
      status: 'One of processing, processed, reissue, verified, failed',
      freeze: 'The freeze status of the card',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
      deleted_at: 'The date that the record was deleted',
    },
    links: {
      first: 'The first page for card orderlist',
      last: 'The last page for card oderlist',
      prev: 'The previous page of current card orderlist',
      next: 'The next page of current card orderlist',
    },
    meta: {
      current_page: 'The page number of current card orderlist',
      from: 'The first number of card orderlist',
      last_page: 'The last number of card orderlist',
      path: 'The path for the card orderlists',
      per_page: 'The number of card orderlist per page',
      to: 'The number limist of card orderlist per page',
      total: 'Total card orders',
    },
  },

  queryentitycardbyid: {
    success: true,
    data: {
      id: 'The id of entity card',
      card_order_id: 'The id of card order',
      entity_id: 'The id of entity',
      card_id: 'The id of the card id that the card order was issued against',
      from_entity_card_id:
        'The id of the card id that the card order was issued against',
      reference: 'A reference from the network referencing the card order',
      number: 'card number',
      cvv: 'cvv',
      expiry_date: 'expired date of card',
      balance: 'card balance',
      daily_purchase_total: 'purchase total amount per day',
      daily_atm_total: 'atm total amount per day',
      monthly_purchase_total: 'purchase total amount per month',
      monthly_atm_total: 'atm total amount per month',
      physical: 'The physical status of the card',
      virtual: 'The virutal status of the card',
      gift: 'The gitft status of the card',
      locked: 'The locked status of the card',
      activated: 'The activated status of the card',
      pin_set: 'The Pin set status of the card',
      status: 'One of processing, processed, reissue, verified, failed',
      freeze: 'The freeze status of the card',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
      deleted_at: 'The date that the record was deleted',
    },
  },
  updateentitycard: {
    success: true,
    data: {
      id: 'The id of entity card',
      card_order_id: 'The id of card order',
      entity_id: 'The id of entity',
      card_id: 'The id of the card id that the card order was issued against',
      from_entity_card_id:
        'The id of the card id that the card order was issued against',
      reference: 'A reference from the network referencing the card order',
      number: 'card number',
      cvv: 'cvv',
      expiry_date: 'expired date of card',
      balance: 'card balance',
      daily_purchase_total: 'purchase total amount per day',
      daily_atm_total: 'atm total amount per day',
      monthly_purchase_total: 'purchase total amount per month',
      monthly_atm_total: 'atm total amount per month',
      physical: 'The physical status of the card',
      virtual: 'The virutal status of the card',
      gift: 'The gitft status of the card',
      locked: 'The locked status of the card',
      activated: 'The activated status of the card',
      pin_set: 'The Pin set status of the card',
      status: 'One of processing, processed, reissue, verified, failed',
      freeze: 'The freeze status of the card',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
      deleted_at: 'The date that the record was deleted',
    },
  },
  queryentitylist: {
    success: true,
    data: {
      id: 'The id of entity card',
      firstName: 'The firstname of the user',
      lastName: 'The lastname of the user',
      country: 'The country of the user',
      address: 'The address of the user',
      city: 'The city which the user is located in',
      state: 'The state which the user is located inr',
      zipcode: 'The zipcode which the user is located in',
      nin: 'The nin of the user',
      email: 'The email address of the user',
      birthdate: 'The birthday of the user',
      phone: '+The phone number of the user',
      tierLevel: 'The level of the tier',
      tierStatus: 'The status of the tier',
      inactive: 'Teh status of inactivated entity',
    },

    links: {
      first: 'The first page for card orderlist',
      last: 'The last page for card oderlist',
      prev: 'The previous page of current card orderlist',
      next: 'The next page of current card orderlist',
    },
    meta: {
      current_page: 'The page number of current card orderlist',
      from: 'The first number of card orderlist',
      last_page: 'The last number of card orderlist',
      path: 'The path for the card orderlists',
      per_page: 'The number of card orderlist per page',
      to: 'The number limist of card orderlist per page',
      total: 'Total card orders',
    },
  },

  queryentitybyid: {
    success: true,
    data: {
      id: 'The id of entity card',
      firstName: 'The firstname of the user',
      lastName: 'The lastname of the user',
      country: 'The country of the user',
      address: 'The address of the user',
      city: 'The city which the user is located in',
      state: 'The state which the user is located inr',
      zipcode: 'The zipcode which the user is located in',
      nin: 'The nin of the user',
      email: 'The email address of the user',
      birthdate: 'The birthday of the user',
      phone: '+The phone number of the user',
      tierLevel: 'The level of the tier',
      tierStatus: 'The status of the tier',
      inactive: 'Teh status of inactivated entity',
    },
  },
  updateentity: {
    success: true,
    data: {
      id: 'The id of entity card',
      firstName: 'The firstname of the user',
      lastName: 'The lastname of the user',
      country: 'The country of the user',
      address: 'The address of the user',
      city: 'The city which the user is located in',
      state: 'The state which the user is located inr',
      zipcode: 'The zipcode which the user is located in',
      nin: 'The nin of the user',
      email: 'The email address of the user',
      birthdate: 'The birthday of the user',
      phone: '+The phone number of the user',
      tierLevel: 'The level of the tier',
      tierStatus: 'The status of the tier',
      inactive: 'Teh status of inactivated entity',
    },
  },
  createentity: {
    success: true,
    data: {
      id: 'The id of entity card',
      firstName: 'The firstname of the user',
      lastName: 'The lastname of the user',
      country: 'The country of the user',
      address: 'The address of the user',
      city: 'The city which the user is located in',
      state: 'The state which the user is located inr',
      zipcode: 'The zipcode which the user is located in',
      nin: 'The nin of the user',
      email: 'The email address of the user',
      birthdate: 'The birthday of the user',
      phone: '+The phone number of the user',
      tierLevel: 'The level of the tier',
      tierStatus: 'The status of the tier',
      inactive: 'Teh status of inactivated entity',
      documents: {
        type: 'The type of the documnet',
        path: 'The path of the document',
      },
    },
  },
  deleteentity: {
    success: true,
  },

  queryentitydocumentlist: {
    success: true,
    data: {
      id: 'The id of entity card',
      entity_id: 'The id of the entity that the card order was created to ',
      type: 'The type of the document',
      path: 'The path of the doument',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
    },

    links: {
      first: 'The first page for card orderlist',
      last: 'The last page for card oderlist',
      prev: 'The previous page of current card orderlist',
      next: 'The next page of current card orderlist',
    },
    meta: {
      current_page: 'The page number of current card orderlist',
      from: 'The first number of card orderlist',
      last_page: 'The last number of card orderlist',
      path: 'The path for the card orderlists',
      per_page: 'The number of card orderlist per page',
      to: 'The number limist of card orderlist per page',
      total: 'Total card orders',
    },
  },

  queryentitydocumentbyid: {
    success: true,
    data: {
      id: 'The id of entity card',
      entity_id: 'The id of the entity that the card order was created to ',
      type: 'The type of the document',
      path: 'The path of the doument',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
    },
  },
  createentitydocument: {
    success: true,
    data: {
      id: 'The id of entity document',
      entity_id: 'The id of the entity that the card order was created to ',
      type: 'The type of the document',
      path: 'The path of the doument',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
    },
  },
  deleteentitydocument: {
    success: true,
  },
  queryverificationlist: {
    success: true,
    data: {
      id: 'The id of the card order object',
      parent_id: 'The id of the parent entity',
      parent_type: 'The type of the parent entity',
      decision_id: 'The id of the destination',
      type: 'The type of the verification',
      score: 'The scroe of the verification',
      description: 'Entity verification for user John Doe from trulioo',
      reference: 'A reference from the network referencing the card order',
      data: 'The data of the transaction',
      attempts: 'The number of the attemps',
      status: 'The status of the verification',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
      results: {
        id: 'The id of the card order object',
        verification_id: 'The id of the verification',
        code: 'The code of the verification',
        field: 'The first surname',
        message: 'The message of the verification',
        data: 'The data of the transaction',
        score: 'The scroe of the verification',
        created_at: 'The date that the record was created',
        updated_at: 'The date that the record was updated',
      },
    },

    error: 'Error message',
    links: {
      first: 'The first page for card orderlist',
      last: 'The last page for card oderlist',
      prev: 'The previous page of current card orderlist',
      next: 'The next page of current card orderlist',
    },
    meta: {
      current_page: 'The page number of current card orderlist',
      from: 'The first number of card orderlist',
      last_page: 'The last number of card orderlist',
      path: 'The path for the card orderlists',
      per_page: 'The number of card orderlist per page',
      to: 'The number limist of card orderlist per page',
      total: 'Total card orders',
    },
  },
  queryverificationforentity: {
    success: true,
    data: [
      {
        id: 'The id of verification',
        firstName: 'The firstname of the user',
        lastName: 'The lastname of the user',
        country: 'The country of the user',
        address: 'The address of the user',
        city: 'The city which the user is located in',
        state: 'The state which the user is located inr',
        zipcode: 'The zipcode which the user is located in',
        nin: 'The nin of the user',
        email: 'The email address of the user',
        birthdate: 'The birthday of the user',
        phone: '+The phone number of the user',
        tierLevel: 'The level of the tier',
        tierStatus: 'The status of the tier',
        inactive: 'Teh status of inactivated entity',
        verifications: [
          {
            id: 'The id of the verification',
            parent_id: 'The id of the parent entity',
            parent_type: 'The type of the parent entity',
            decision_id: 'The id of the destination',
            type: 'The type of the verification',
            score: 'The scroe of the verification',
            description: 'Entity verification for user John Doe from trulioo',
            reference:
              'A reference from the network referencing the card order',
            data: 'The data of the transaction',
            attempts: 'The number of the attemps',
            status: 'The status of the verification',
            created_at: 'The date that the record was created',
            updated_at: 'The date that the record was updated',
            deleted_at: null,
          },
        ],
      },
    ],
    links: {
      first: 'The first page for card orderlist',
      last: 'The last page for card oderlist',
      prev: 'The previous page of current card orderlist',
      next: 'The next page of current card orderlist',
    },
    meta: {
      current_page: 'The page number of current card orderlist',
      from: 'The first number of card orderlist',
      last_page: 'The last number of card orderlist',
      path: 'The path for the card orderlists',
      per_page: 'The number of card orderlist per page',
      to: 'The number limist of card orderlist per page',
      total: 'Total card orders',
    },
  },
  queryverificationbyid: {
    success: true,
    data: {
      id: 'The id of the verification',
      parent_id: 'The id of parent entity',
      parent_type: 'The type of the parent enttiy',
      decision_id: 'The id of the decision',
      type: 'The type of the verification',
      score: 'The score of the verification',
      description: 'Entity verification for username John Doe from trulioo',
      reference: 'A reference from the network referencing the card order',
      data: 'The data of the transaction',
      attempts: 'The number of the attemps',
      status: 'The status of the verification',
      created_at: 'The date that the record was created',
      updated_at: 'The date that the record was updated',
      results: {
        id: 'The id of the card order object',
        verification_id: 'The id of the verification',
        code: 'The code of the verification',
        field: 'The first surname',
        message: 'The message of the verification',
        data: 'The data of the transaction',
        score: 'The scroe of the verification',
        created_at: 'The date that the record was created',
        updated_at: 'The date that the record was updated',
      },
    },
    error: 'The error message',
  },
  authorizationrequest: {
    id: 'The id of the card order object',
    from_card_transaction_id:
      'The id of the card transaction id that the card transaction was issued against',
    entity_card_id: 'The id of the entity that the card order was created to ',
    transaction_id: 'The id of the card transaction id',
    merchant: 'NINTENDO    *OFAMERICA',
    reference: 'A reference from the network referencing the card order',
    authorization: 'The id of card authorization ',
    type: 'The type of card transaction',
    status: 'The status of card transaction',
    currency: 'Currency',
    channel: 'The channel of the card transaction',
    pin_present: 'The present of the card transaction',
    approved: 'The approved mount',
    total: 'The total amount',
    created_at: 'The date that the record was created',
    updated_at: 'The date that the record was updated',
  },
  authorizationrequests: {
    id: 'The id of the card order object',
    from_card_transaction_id:
      'The id of the card transaction id that the card transaction was issued against',
    entity_card_id: 'The id of the entity that the card order was created to ',
    transaction_id: 'The id of the card transaction id',
    merchant: 'NINTENDO    *OFAMERICA',
    reference: 'A reference from the network referencing the card order',
    authorization: 'The id of card authorization ',
    type: 'The type of card transaction',
    status: 'The status of card transaction',
    currency: 'Currency',
    channel: 'The channel of the card transaction',
    pin_present: 'The present of the card transaction',
    approved: 'The approved mount',
    total: 'The total amount',
    created_at: 'The date that the record was created',
    updated_at: 'The date that the record was updated',
  },
  salerequest: {
    id: 'The id of the card order object',
    from_card_transaction_id:
      'The id of the card transaction id that the card transaction was issued against',
    entity_card_id: 'The id of the entity that the card order was created to ',
    transaction_id: 'The id of the card transaction id',
    merchant: 'NINTENDO    *OFAMERICA',
    reference: 'A reference from the network referencing the card order',
    authorization: 'The id of card authorization ',
    type: 'The type of card transaction',
    status: 'The status of card transaction',
    currency: 'Currency',
    channel: 'The channel of the card transaction',
    pin_present: 'The present of the card transaction',
    approved: 'The approved mount',
    total: 'The total amount',
    created_at: 'The date that the record was created',
    updated_at: 'The date that the record was updated',
  },
  approvalresponse: {
    id: 'The id of transaction',
    amount: 'The amount of the transaction',
  },
  declineresponse: {
    id: 'The id of the transaction',
    amount: 'The amount of the transaction',
    reason: 'The reason of the transaction',
  },
  capturerequest: {
    id: 'The id of the card order object',
    from_card_transaction_id:
      'The id of the card transaction id that the card transaction was issued against',
    entity_card_id: 'The id of the entity that the card order was created to ',
    transaction_id: 'The id of the card transaction id',
    merchant: 'NINTENDO    *OFAMERICA',
    reference: 'A reference from the network referencing the card order',
    authorization: 'The id of card authorization ',
    type: 'The type of card transaction',
    status: 'The status of card transaction',
    currency: 'Currency',
    channel: 'The channel of the card transaction',
    pin_present: 'The present of the card transaction',
    approved: 'The approved mount',
    total: 'The total amount',
    created_at: 'The date that the record was created',
    updated_at: 'The date that the record was updated',
  },
  reveralrequest: {
    id: 'The id of the card order object',
    from_card_transaction_id:
      'The id of the card transaction id that the card transaction was issued against',
    entity_card_id: 'The id of the entity that the card order was created to ',
    transaction_id: 'The id of the card transaction id',
    merchant: 'NINTENDO    *OFAMERICA',
    reference: 'A reference from the network referencing the card order',
    authorization: 'The id of card authorization ',
    type: 'The type of card transaction',
    status: 'The status of card transaction',
    currency: 'Currency',
    channel: 'The channel of the card transaction',
    pin_present: 'The present of the card transaction',
    approved: 'The approved mount',
    total: 'The total amount',
    created_at: 'The date that the record was created',
    updated_at: 'The date that the record was updated',
  },
  refundrequest: {
    id: 'The id of the card order object',
    from_card_transaction_id:
      'The id of the card transaction id that the card transaction was issued against',
    entity_card_id: 'The id of the entity that the card order was created to ',
    transaction_id: 'The id of the card transaction id',
    merchant: 'NINTENDO    *OFAMERICA',
    reference: 'A reference from the network referencing the card order',
    authorization: 'The id of card authorization ',
    type: 'The type of card transaction',
    status: 'The status of card transaction',
    currency: 'Currency',
    channel: 'The channel of the card transaction',
    pin_present: 'The present of the card transaction',
    approved: 'The approved mount',
    total: 'The total amount',
    created_at: 'The date that the record was created',
    updated_at: 'The date that the record was updated',
  },
  kycrequest: {
    id: 'The id of the card order object',
    parent_id: 'The id of the parent entity',
    parent_type: 'The type of the parent entity',
    decision_id: 'The id of the destination',
    type: 'The type of the verification',
    score: 'The scroe of the verification',
    description: 'Entity verification for user John Doe from trulioo',
    reference: 'A reference from the network referencing the card order',
    data: 'The data of the transaction',
    attempts: 'The number of the attemps',
    status: 'The status of the verification',
    created_at: 'The date that the record was created',
    updated_at: 'The date that the record was updated',
    results: 'Arry of result object',
  },
  authorization: {
    entity_card_id: 'The id of the entity',
    amount: 'The amount of the entity',
    merchant: 'Merchant',
    capture: '1',
  },
  kyc: {
    entity_id: 'The id of the entity',
    status: 'The status of verification',
  },
};
export { apiPath };
export default descriptions;
